# Generated by Django 5.2.1 on 2025-08-21 07:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('multiple_gym', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Equipment Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Inventory Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('alternate_phone', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=10)),
                ('gst_number', models.CharField(blank=True, max_length=20)),
                ('pan_number', models.CharField(blank=True, max_length=10)),
                ('rating', models.IntegerField(default=5, help_text='Rating out of 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('purchase_date', models.DateField()),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('warranty_period_months', models.IntegerField(default=12)),
                ('warranty_start_date', models.DateField()),
                ('warranty_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('working', 'Working'), ('maintenance', 'Under Maintenance'), ('repair', 'Under Repair'), ('out_of_order', 'Out of Order'), ('disposed', 'Disposed')], default='working', max_length=20)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('critical', 'Critical')], default='excellent', max_length=20)),
                ('location', models.CharField(help_text='Location within gym', max_length=100)),
                ('last_maintenance_date', models.DateField(blank=True, null=True)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('maintenance_frequency_days', models.IntegerField(default=90, help_text='Maintenance frequency in days')),
                ('depreciation_rate', models.DecimalField(decimal_places=2, default=10.0, help_text='Annual depreciation rate as percentage', max_digits=5)),
                ('specifications', models.TextField(blank=True, help_text='Technical specifications')),
                ('notes', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='equipment_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('gym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='multiple_gym.gym')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='inventory_management.equipmentcategory')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_management.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('serial_number', 'gym')},
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('gym', models.CharField(help_text='Temporary - replace with ForeignKey to Gym', max_length=100)),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('unit', models.CharField(choices=[('piece', 'Piece'), ('kg', 'Kilogram'), ('liter', 'Liter'), ('packet', 'Packet'), ('bottle', 'Bottle'), ('box', 'Box'), ('meter', 'Meter')], default='piece', max_length=20)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('auto_reorder', models.BooleanField(default=False)),
                ('reorder_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, help_text='Storage location', max_length=100)),
                ('has_expiry', models.BooleanField(default=False)),
                ('expiry_alert_days', models.IntegerField(default=30, help_text='Alert X days before expiry')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory_management.inventorycategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('primary_vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_management.vendor')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'gym')},
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('expiry_soon', 'Expiring Soon'), ('expired', 'Expired'), ('maintenance_due', 'Maintenance Due'), ('warranty_expiring', 'Warranty Expiring'), ('reorder_needed', 'Reorder Needed')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.equipment')),
                ('inventory_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.inventoryitem')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('adjustment', 'Stock Adjustment'), ('damage', 'Damage/Loss'), ('return', 'Return'), ('transfer', 'Transfer'), ('expired', 'Expired')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stock_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory_management.inventoryitem')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_management.vendor')),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive Maintenance'), ('corrective', 'Corrective Maintenance'), ('emergency', 'Emergency Repair'), ('inspection', 'Inspection'), ('calibration', 'Calibration')], max_length=20)),
                ('scheduled_date', models.DateField()),
                ('actual_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('description', models.TextField()),
                ('work_performed', models.TextField(blank=True)),
                ('parts_replaced', models.TextField(blank=True)),
                ('technician_name', models.CharField(blank=True, max_length=100)),
                ('labor_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('parts_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('next_maintenance_due', models.DateField(blank=True, null=True)),
                ('downtime_hours', models.DecimalField(decimal_places=2, default=0, help_text='Equipment downtime in hours', max_digits=6)),
                ('notes', models.TextField(blank=True)),
                ('before_images', models.ImageField(blank=True, null=True, upload_to='maintenance_images/')),
                ('after_images', models.ImageField(blank=True, null=True, upload_to='maintenance_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='inventory_management.equipment')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_management.vendor')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
    ]
